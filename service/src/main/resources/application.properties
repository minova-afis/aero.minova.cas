spring.application.name=Core Application System
spring.profiles.default=development
aero.afis.host.url.http=http://mintest.minova.com

# Plugins aus dem lib Ordner laden.
loader.path=../lib/

# Loge ausgef\uFFFDhrten SQL Code.
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

spring.http.converters.preferred-json-mapper=gson

login_dataSource=ldap

server.servlet.context-path=/cas
server.port=8084

management.server.port=8081
management.endpoints.enabled-by-default=false

spring.jpa.hibernate.ddl-auto=update
# `Update` wird hier benötigt, da sonst nicht die Tabellen für das Sicherheits-System nach dem Starten zur Verfügung stehen.
# Dadurch können somit auch Extensions keine Privilegien für ihre Methoden erstellen,
# was für Postgre-Installation notwendig ist, da hier das Setup nicht funktioniert.

# Wichtig für Postgres, damit keine "_" erzeugt werden
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
cors.allowed.origins=http://localhost:8100,https://localhost:8100,https://saas-app-dev.minova.com